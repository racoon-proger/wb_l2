package main

import (
	"fmt"
)

// test функция с именованным возвращаемым параметром
func test() (x int) {
	defer func() {
		x++
	}()
	x = 1
	return
}

// anotherTest функция с неименованным возвращаемым параметром
func anotherTest() int {
	var x int
	defer func() {
		x++
	}()
	x = 1
	return x
}

func main() {
	fmt.Println(test())
	fmt.Println(anotherTest())
}

/* вывод:
2
1
defer - это ключевое слово, которое используется для отложенного выполнения
функции или метода до тех пор, пока текущая функция не завершится.

в данном случае окружающая функция имеет именованные параметры результата,
отложенная функция может получить доступ к результирующим параметрам и изменить
их до того, как они будут возвращены. Если отложенная функция имеет какие-либо
возвращаемыезначения, они отбрасываются после завершения функции.
*/
